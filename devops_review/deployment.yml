apiVersion: apps/v1
kind: Deployment
metadata:
  name: us-core-vmc-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: us-core-vmc
  template:
    metadata:
      labels:
        app: us-core-vmc
    spec:
      containers:
      - name: us-core-vmc-container
        image: us-core-vmc-image:us-core-vmc-app
        ports:
          - containerPort: 8080
        resources:
          requests:
            cpu: 250Mi
            memory: 500Mi
          limits:
            cpu: 400Mi
            memory: 1000Mi         
---
apiVersion: v1
kind: Service
metadata:
  name: us-core-vmc-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: us-core-vmc
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: us-core-vmc-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: us-core-vmc-ip
    ingress.gcp.kubernetes.io/pre-shared-cert: "certificado" #este certificado, puede ser uno que se tenga de antemano, o bien uno que provee google.
spec:
  backend:
    serviceName: us-core-vmc-service
    servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: us-core-vmc-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: us-core-vmc-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80